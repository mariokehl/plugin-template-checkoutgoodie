<div id="checkout-goodie-progress" class="mb-4">
    <div id="missing-goodie-amount" class="text-center">
        {% if percentage == 100 %}<i class="fa fa-check"></i>&nbsp;{% endif %}{{ label }}
    </div>
    <div class="progress mt-2">
        <div role="progressbar" aria-valuenow="{{ percentage }}" aria-valuemin="0" aria-valuemax="100" class="progress-bar progress-bar-striped bg-success" {% if width | length > 0 %} style="{{ width }}"{% endif %}></div>
    </div>
    {{ width }}
</div>

<script id="checkout-goodie-config" type="application/json">
    {
        "initialData": {
            "amount": {{ currAmount }},
            "percentage": {{ percentage }}
        },
        "grossValue": {{ grossValue }},
        "currency": "{{ currency }}",
        "messages": {
            "goal": "{{ messages.goal }}",
            "missing": "{{ messages.missing }}"
        },
        "icons": {
            "goal": "<i class=\"fa fa-check\"><\/i>"
        }
    }
</script>

<script>
    function CheckoutGoodie(itemSum) {
        this.itemSum = itemSum;
        this.getConfig = function () {
            const json = JSON.parse(document.getElementById('checkout-goodie-config').textContent);
            return json;
        },
        this.getGrossValue = function () {
            const config = this.getConfig();
            return config.grossValue;
        },
        this.getItemSum = function () {
            if (itemSum) return itemSum;
            const config = this.getConfig();
            return config.initialData.amount;
        },
        this.getGoalReachedMessage = function () {
            const config = this.getConfig();
            return config.icons.goal + '&nbsp;' + config.messages.goal;
        },
        this.getMissingMessage = function (amount) {
            const config = this.getConfig();
            let msg = config.messages.missing;
            msg = msg.replace(':amount', Intl.NumberFormat('de-DE').format(amount));
            msg = msg.replace(':currency', config.currency);
            return msg;
        },
        this.calc = function () {
            let output;

            const amount = (this.getGrossValue() - this.getItemSum());
            if (amount <= 0) {
                output = this.getGoalReachedMessage();
            } else {
                output = this.getMissingMessage(amount);
            }

            let pr = (this.getItemSum() / this.getGrossValue()) * 100;
            pr = Math.round(pr);
            pr = (pr > 100) ? 100 : pr;

            const progress = document.querySelectorAll('[role="progressbar"]')[0];
            progress.setAttribute('aria-valuenow', pr);
            progress.style['width'] = pr + '%';

            return output;
        },
        this.setLabel = function () {
            const div = document.getElementById('missing-goodie-amount');
            if (!div) {
                return;
            } else {
                div.innerHTML = this.calc();
            }
        }
    }

    // Initial setup in checkout view
    window.addEventListener('load', () => {
        const goodie = new CheckoutGoodie();
        goodie.setLabel();
    }, false);

    // New item added to basket
    document.addEventListener('afterBasketChanged', (e) => {
        const basket = e.detail;
        const itemSum = basket.itemSum;
        let goodie = new CheckoutGoodie(itemSum);
        goodie.setLabel();
    }, false);
</script>